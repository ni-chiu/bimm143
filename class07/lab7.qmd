---
title: "Lab 7: PCA"
author: "Nicholas Chiu"
date: "02/03/2024"
format: pdf
---

## Data Import, Q1

```{r}
url <- "https://tinyurl.com/UK-foods"
x <- read.csv(url)
dim(x)
```

Using the dim function, we see there are 17 rows and 5 columns.

## Checking Data, Q2

```{r}
# Preview first 6 rows
#head(x)

# Solution 1
#rownames(x) <- x[,1]
#x <- x[,-1]
#head(x)

#dim(x)

# Solution 2
x <- read.csv(url, row.names=1)
head(x)
dim(x)
#x
```

The second approach is more robust and efficient since it solves the problem in 1
line of code. Additionally, running the first solution multiple times will
continuously make the data frame dimensions smaller as it sets the first column
as the row names.

## Spotting major differences and trends, Q3/Q5/Q6

```{r}
# Q3
barplot(as.matrix(x), beside=F, col=rainbow(nrow(x)))

# Q5
pairs(x, col=rainbow(10), pch=16)
```

Q3: Changing the optional argument 'beside' to false results in the desired plot.

Q5: If a point lies on the diagonal of a given pairwise plot, it means that the variable
the point represents is very correlated between the two countries (equal consumption).

Q6: The main differences between N. Ireland and other UK countries is that seems that they
have equal or less consumption on average for almost every category of food. The one outlier is fresh potatoes, which N. Ireland consumes far more than the other 3 countries on average.

## PCA, Q7/Q8/Q9

```{r}
# Use the prcomp() PCA function 
pca <- prcomp( t(x) )
summary(pca)

# Q7: Plot PC1 vs PC2
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2", xlim=c(-270,500))
text(pca$x[,1], pca$x[,2], colnames(x))

# Q8: Customize plot
column_colors <- c("orange", "red", "blue", "green")
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2",xlim=c(-270,500))
text(pca$x[,1], pca$x[,2], colnames(x), col = column_colors)

v <- round( pca$sdev^2/sum(pca$sdev^2) * 100 )
v

z <- summary(pca)
z$importance

barplot(v, xlab="Principal Component", ylab="Percent Variation")

# Lets focus on PC1 as it accounts for > 90% of variance 
par(mar=c(10, 3, 0.35, 0))
barplot( pca$rotation[,1], las=2 )

# PCA2
par(mar=c(10, 3, 0.35, 0))
barplot( pca$rotation[,2], las=2 )

```
Q9: Fresh potatoes and soft drinks are prominent features on the loading plot. PC2 tells us that
fresh potatoes push countries down while soft drinks push countries up.

## ggplot
```{r}
library(ggplot2)

df <- as.data.frame(pca$x)
df_lab <- tibble::rownames_to_column(df, "Country")

# Our first basic plot
ggplot(df_lab) + 
  aes(PC1, PC2, col=Country) + 
  geom_point()


ggplot(df_lab) + 
  aes(PC1, PC2, col=Country, label=Country) + 
  geom_hline(yintercept = 0, col="gray") +
  geom_vline(xintercept = 0, col="gray") +
  geom_point(show.legend = FALSE) +
  geom_label(hjust=1, nudge_x = -10, show.legend = FALSE) +
  expand_limits(y = c(-300,500)) +
  xlab("PC1 (67.4%)") +
  ylab("PC2 (28%)") +
  theme_bw()

ld <- as.data.frame(pca$rotation)
ld_lab <- tibble::rownames_to_column(ld, "Food")

ggplot(ld_lab) +
  aes(PC1, Food) +
  geom_col() 

ggplot(ld_lab) +
  aes(PC1, reorder(Food, PC1), bg=PC1) +
  geom_col() + 
  xlab("PC1 Loadings/Contributions") +
  ylab("Food Group") +
  scale_fill_gradient2(low="purple", mid="gray", high="darkgreen", guide=NULL) +
  theme_bw()

biplot(pca)
```

# PCA of RNA-seq Data, Q10

```{r}
url2 <- "https://tinyurl.com/expression-CSV"
rna.data <- read.csv(url2, row.names=1)
head(rna.data)
dim(rna.data)

```
Q10: There are 100 genes and 10 samples in the data.

```{r}
# Again we have to take the transpose of our data 
pca <- prcomp(t(rna.data), scale=TRUE)
 
# Simple un polished plot of pc1 and pc2
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2")

summary(pca)

plot(pca, main="Quick scree plot")

# Variance captured per PC 
pca.var <- pca$sdev^2

# Percent variance is often more informative to look at 
pca.var.per <- round(pca.var/sum(pca.var)*100, 1)
pca.var.per

barplot(pca.var.per, main="Scree Plot", 
        names.arg = paste0("PC", 1:10),
        xlab="Principal Component", ylab="Percent Variation")
```

```{r}
# A vector of colors for wt and ko samples
colvec <- colnames(rna.data)
colvec[grep("wt", colvec)] <- "red"
colvec[grep("ko", colvec)] <- "blue"

plot(pca$x[,1], pca$x[,2], col=colvec, pch=16,
     xlab=paste0("PC1 (", pca.var.per[1], "%)"),
     ylab=paste0("PC2 (", pca.var.per[2], "%)"))

text(pca$x[,1], pca$x[,2], labels = colnames(rna.data), pos=c(rep(4,5), rep(2,5)))
```
```{r}
library(ggplot2)

df <- as.data.frame(pca$x)

# Our first basic plot
ggplot(df) + 
  aes(PC1, PC2) + 
  geom_point()

# Add a 'wt' and 'ko' "condition" column
df$samples <- colnames(rna.data) 
df$condition <- substr(colnames(rna.data),1,2)

p <- ggplot(df) + 
        aes(PC1, PC2, label=samples, col=condition) + 
        geom_label(show.legend = FALSE)
p

p + labs(title="PCA of RNASeq Data",
       subtitle = "PC1 clealy seperates wild-type from knock-out samples",
       x=paste0("PC1 (", pca.var.per[1], "%)"),
       y=paste0("PC2 (", pca.var.per[2], "%)"),
       caption="Class example data") +
     theme_bw()
```

Gene Loadings
```{r}
loading_scores <- pca$rotation[,1]

# Find the top 10 measurements (genes) that contribute
# most to PC1 in either direction (+ or -)
gene_scores <- abs(loading_scores) 
gene_score_ranked <- sort(gene_scores, decreasing=TRUE)

# show the names of the top 10 genes
top_10_genes <- names(gene_score_ranked[1:10])
top_10_genes 
```

